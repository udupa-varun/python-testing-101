name: Pyinstaller

on:
  push:
    tags:
      - '*.*.*'

jobs:
  Windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.7]
    steps:
    - uses: actions/checkout@v1
    - name: Get tag
      id: tag
      shell: bash
      run: |
        echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: build with pyinstaller
      run: |
        pyinstaller example-py-pytest/script.py --onedir
        zip -r script-${{ steps.tag.outputs.tag }}-win.zip dist
    - name: Upload release file
      uses: actions/upload-artifact@v1
      with:
        name: script-${{ steps.tag.outputs.tag }}-win.zip
        path: ./script-${{ steps.tag.outputs.tag }}-win.zip
#     - name: Upload checksum file
#       uses: actions/upload-artifact@v1
#       with:
#         name: script-${{ steps.tag.outputs.tag }}-win.sha256sum
#         path: dist/script-${{ steps.tag.outputs.tag }}-win.sha256sum

  Linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    steps:
    - uses: actions/checkout@v1
    - name: Get tag
      id: tag
      shell: bash
      run: |
        echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Build with pyinstaller
      run: |
        pyinstaller example-py-pytest/script.py --onedir
        zip -r script-${{ steps.tag.outputs.tag }}-linux.zip dist
    - name: Upload release file
      uses: actions/upload-artifact@v1
      with:
        name: script-${{ steps.tag.outputs.tag }}-linux.zip
        # path: dist/script
        path: ./script-${{ steps.tag.outputs.tag }}-linux.zip
#     - name: Upload checksum file
#       uses: actions/upload-artifact@v1
#       with:
#         name: script-${{ steps.tag.outputs.tag }}-linux.sha256sum
#         path: dist/script-${{ steps.tag.outputs.tag }}-linux.sha256sum

  Release:
    needs: [Windows, Linux]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get tag
        id: tag
        run: |
          echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
      - name: Download Windows release file
        uses: actions/download-artifact@master
        with:
          name: script-${{ steps.tag.outputs.tag }}-win.exe
          path: ./
      - name: Download Linux release file
        uses: actions/download-artifact@master
        with:
          name: script-${{ steps.tag.outputs.tag }}-linux.zip
          path: ./
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: $ {{ steps.tag.outputs.tag }}
          release_name: $ {{steps.tag.outputs.tag }}
          draft: true
          prerelease: true
      - name: Upload Windows release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./script-${{ steps.tag.outputs.tag }}-win.zip
          asset_name: script-${{ steps.tag.outputs.tag }}-win.zip
          asset_content_type: application/zip

      - name: Upload Linux release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./script-${{ steps.tag.outputs.tag }}-linux.zip
          asset_name: script-${{ steps.tag.outputs.tag }}-linux.zip
          asset_content_type: application/zip
#       - name: Upload Linux checksum file asset
#         uses: actions/upload-release-asset@v1.0.1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           upload_url: ${{ steps.create_release.outputs.upload_url }}
#           asset_path: releases/script-${{ steps.tag.outputs.tag }}-linux.sha256sum/script-${{ steps.tag.outputs.tag }}-linux.sha256sum
#           asset_name: script-${{ steps.tag.outputs.tag }}-linux.sha256sum
#           asset_content_type: text/pain
